worker_processes auto;
events { worker_connections 1024; }

http {
  include       mime.types;
  default_type  application/octet-stream;
  sendfile        on;
  keepalive_timeout  65;

  # Logging format including auth context propagated from auth_request
  log_format gateway '$remote_addr - $remote_user [$time_local] ' 
                    '"$request" $status $body_bytes_sent ' 
                    '"$http_referer" "$http_user_agent" ' 
                    'req_time=$request_time upstream_time=$upstream_response_time ' 
                    'upstream_addr=$upstream_addr user_id=$user_id user_role=$user_role';

  access_log /var/log/nginx/access.log gateway;
  error_log  /var/log/nginx/error.log info;

  upstream auth_service {
    server auth-backend:8000;
  }

  upstream station_service {
    server host.docker.internal:3002; # hoặc container station-service nếu có
  }

  server {
    listen 80;

    # Liveness probe
    location = /healthz {
      return 200 'ok';
      add_header Content-Type text/plain;
    }

    # AuthService APIs
    location /api/v1/ {
      # Require authentication for protected APIs except /auth/*
      if ($request_uri !~ ^/api/v1/auth/) {
        auth_request /__auth;
        auth_request_set $user_id $upstream_http_x_user_id;
        auth_request_set $user_role $upstream_http_x_user_role;
        proxy_set_header X-User-Id $user_id;
        proxy_set_header X-User-Role $user_role;
      }
      # propagate request metadata to upstreams
      proxy_set_header X-Forwarded-Host $host;
      proxy_set_header X-Forwarded-Uri $request_uri;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_pass http://auth_service;
    }

    # Subrequest to AuthService for token introspection
    location = /__auth {
      internal;
      proxy_pass http://auth_service/api/v1/auth/introspect;
      proxy_set_header Authorization $http_authorization;
      proxy_pass_request_body off;
      proxy_set_header Content-Length "";
      # Separate access log for auth subrequests
      access_log /var/log/nginx/auth_access.log gateway;
    }

    # Station service
    location /stations/ {
      rewrite ^/stations/(.*)$ /api/v1/stations/$1 break;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_pass http://station_service;
    }
  }
}


