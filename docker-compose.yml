version: '3.8'

services:
  # MySQL Database
  mysql:
    image: mysql:8.0
    env_file:
      - ./AuthService/backend/.env
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-root}
      MYSQL_DATABASE: ${MYSQL_DATABASE:-authdb}
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    healthcheck:
      test: ["CMD-SHELL", "mysqladmin ping -h 127.0.0.1 -p$${MYSQL_ROOT_PASSWORD}"]
      interval: 5s
      timeout: 5s
      retries: 10
    networks:
      - app-network
      - ev-rental-network
    restart: unless-stopped

  # Auth Backend Service
  auth-backend:
    build: ./AuthService/backend
    env_file:
      - ./AuthService/backend/.env
    environment:
      NODE_ENV: production
      PORT: 8000
      MYSQL_HOST: mysql
      MYSQL_PORT: 3306
      MYSQL_DATABASE: ${MYSQL_DATABASE:-authdb}
      MYSQL_USER: ${MYSQL_USER:-root}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD:-root}
      CLIENT_URL: http://localhost:3000,http://localhost:5173,http://127.0.0.1:5173,http://localhost:8080,http://127.0.0.1:8080,https://localhost,https://yourdomain.com,http://localhost:8060,http://127.0.0.1:8060
    depends_on:
      mysql:
        condition: service_healthy
    ports:
      - "8003:8000"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/v1/health"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - app-network
      - ev-rental-network
    restart: unless-stopped

  # Frontend Build
  frontend-build:
    build:
      context: ./AuthService/frontend/auth-ui
      dockerfile: Dockerfile
      args:
        VITE_API_BASE_URL: ${VITE_API_BASE_URL:-http://localhost:9080}
    ports:
      - "8060:3000"
    depends_on:
      - auth-backend
    networks:
      - app-network

volumes:
  mysql_data:

networks:
  app-network:
    driver: bridge
  ev-rental-network:  # ← Thêm shared network
    external: true
    name: ev-rental-network
